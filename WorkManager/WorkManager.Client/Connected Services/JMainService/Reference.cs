//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkManager.JMainService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ServiceContracts.Server.WorkManager/")]
    public partial class InvocationTargetException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private stackTraceElement[] targetExceptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("stackTrace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stackTraceElement[] targetException {
            get {
                return this.targetExceptionField;
            }
            set {
                this.targetExceptionField = value;
                this.RaisePropertyChanged("targetException");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ServiceContracts.Server.WorkManager/")]
    public partial class stackTraceElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ServiceContracts.Server.WorkManager/")]
    public partial class IllegalAccessException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ServiceContracts.Server.WorkManager/", ConfigurationName="JMainService.IMainService")]
    public interface IMainService {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ServiceContracts.Server.WorkManager/IMainService/GetRequest", ReplyAction="http://ServiceContracts.Server.WorkManager/IMainService/GetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WorkManager.JMainService.InvocationTargetException), Action="http://ServiceContracts.Server.WorkManager/IMainService/Get/Fault/InvocationTarge" +
            "tException", Name="InvocationTargetException")]
        [System.ServiceModel.FaultContractAttribute(typeof(WorkManager.JMainService.IllegalAccessException), Action="http://ServiceContracts.Server.WorkManager/IMainService/Get/Fault/IllegalAccessEx" +
            "ception", Name="IllegalAccessException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        WorkManager.JMainService.GetResponse Get(WorkManager.JMainService.GetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServiceContracts.Server.WorkManager/IMainService/GetRequest", ReplyAction="http://ServiceContracts.Server.WorkManager/IMainService/GetResponse")]
        System.Threading.Tasks.Task<WorkManager.JMainService.GetResponse> GetAsync(WorkManager.JMainService.GetRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://ServiceContracts.Server.WorkManager/IMainService/InvokeRequest", ReplyAction="http://ServiceContracts.Server.WorkManager/IMainService/InvokeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WorkManager.JMainService.InvocationTargetException), Action="http://ServiceContracts.Server.WorkManager/IMainService/Invoke/Fault/InvocationTa" +
            "rgetException", Name="InvocationTargetException")]
        [System.ServiceModel.FaultContractAttribute(typeof(WorkManager.JMainService.IllegalAccessException), Action="http://ServiceContracts.Server.WorkManager/IMainService/Invoke/Fault/IllegalAcces" +
            "sException", Name="IllegalAccessException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkManager.JMainService.InvokeResponse Invoke(WorkManager.JMainService.InvokeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServiceContracts.Server.WorkManager/IMainService/InvokeRequest", ReplyAction="http://ServiceContracts.Server.WorkManager/IMainService/InvokeResponse")]
        System.Threading.Tasks.Task<WorkManager.JMainService.InvokeResponse> InvokeAsync(WorkManager.JMainService.InvokeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get", WrapperNamespace="http://ServiceContracts.Server.WorkManager/", IsWrapped=true)]
    public partial class GetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ServiceContracts.Server.WorkManager/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ServiceContracts.Server.WorkManager/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        public GetRequest() {
        }
        
        public GetRequest(string arg0, string arg1) {
            this.arg0 = arg0;
            this.arg1 = arg1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponse", WrapperNamespace="http://ServiceContracts.Server.WorkManager/", IsWrapped=true)]
    public partial class GetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ServiceContracts.Server.WorkManager/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public GetResponse() {
        }
        
        public GetResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Invoke", WrapperNamespace="http://ServiceContracts.Server.WorkManager/", IsWrapped=true)]
    public partial class InvokeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ServiceContracts.Server.WorkManager/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ServiceContracts.Server.WorkManager/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        public InvokeRequest() {
        }
        
        public InvokeRequest(string arg0, string arg1) {
            this.arg0 = arg0;
            this.arg1 = arg1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InvokeResponse", WrapperNamespace="http://ServiceContracts.Server.WorkManager/", IsWrapped=true)]
    public partial class InvokeResponse {
        
        public InvokeResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : WorkManager.JMainService.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<WorkManager.JMainService.IMainService>, WorkManager.JMainService.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkManager.JMainService.GetResponse WorkManager.JMainService.IMainService.Get(WorkManager.JMainService.GetRequest request) {
            return base.Channel.Get(request);
        }
        
        public string Get(string arg0, string arg1) {
            WorkManager.JMainService.GetRequest inValue = new WorkManager.JMainService.GetRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            WorkManager.JMainService.GetResponse retVal = ((WorkManager.JMainService.IMainService)(this)).Get(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkManager.JMainService.GetResponse> WorkManager.JMainService.IMainService.GetAsync(WorkManager.JMainService.GetRequest request) {
            return base.Channel.GetAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkManager.JMainService.GetResponse> GetAsync(string arg0, string arg1) {
            WorkManager.JMainService.GetRequest inValue = new WorkManager.JMainService.GetRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            return ((WorkManager.JMainService.IMainService)(this)).GetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkManager.JMainService.InvokeResponse WorkManager.JMainService.IMainService.Invoke(WorkManager.JMainService.InvokeRequest request) {
            return base.Channel.Invoke(request);
        }
        
        public void Invoke(string arg0, string arg1) {
            WorkManager.JMainService.InvokeRequest inValue = new WorkManager.JMainService.InvokeRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            WorkManager.JMainService.InvokeResponse retVal = ((WorkManager.JMainService.IMainService)(this)).Invoke(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkManager.JMainService.InvokeResponse> WorkManager.JMainService.IMainService.InvokeAsync(WorkManager.JMainService.InvokeRequest request) {
            return base.Channel.InvokeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkManager.JMainService.InvokeResponse> InvokeAsync(string arg0, string arg1) {
            WorkManager.JMainService.InvokeRequest inValue = new WorkManager.JMainService.InvokeRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            return ((WorkManager.JMainService.IMainService)(this)).InvokeAsync(inValue);
        }
    }
}
